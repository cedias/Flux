function Flux(args){this.soundcloud_client_id=args.SCid;this.streams=[];this.tracksLoaded=0;this.currentTrack=0;SC.initialize({client_id:this.soundcloud_client_id});this.totalTracks=args.links.length;this.autoplay=args.autoplay;this.continuous=args.continuous;this._linksToStreams(args.links)}Flux.prototype._linksToStreams=function(list){for(var i=0;i<list.length;i++){var stream=this._newStreamFromLink(list[i],i);this.streams.push(stream)}};Flux.prototype._newStreamFromLink=function(link,index){var args={flux:this,url:link,index:index};return new Stream_Soundcloud(args)};Flux.prototype._eventManager=function(evt){if(evt.msg==="Loaded"){this.tracksLoaded++;if(evt.index===0&&this.autoplay)this.togglePlay()}if(evt.msg==="Song Ended")this.nextSong()};Flux.prototype.stop=function(){this.streams[this.currentTrack].stop();this.streams[this.currentTrack].setPosition(0)};Flux.prototype.togglePlay=function(){this.streams[this.currentTrack].togglePlay();console.log("play:"+this.currentTrack)};Flux.prototype.setVolume=function(volume){if(volume>=0&&volume<=100)this.streams[this.currentTrack].setVolume(volume);else console.log("Error: volume [0;100] you gave "+volume)};Flux.prototype.nextSong=function(){this.stop();this.currentTrack=(this.currentTrack+1)%this.totalTracks;if(this.autoplay)this.togglePlay()};Flux.prototype.previousSong=function(){this.stop();if(this.currentTrack!==0)this.currentTrack--;else this.currentTrack=this.totalTracks-1;if(this.autoplay)this.togglePlay()};Flux.prototype.goToSong=function(song){this.stop();if(song>=0&&song<=this.totalTracks-1)this.currentTrack=song;else console.log("Error: wrong song number");if(this.autoplay)this.togglePlay()};Flux.prototype.setPosition=function(time){this.streams[this.currentTrack].setPosition(time)};function Stream_Soundcloud(args){this.flux=args.flux;this.stream_type="Soundcloud";this.state="created";this.client_id=args.flux.soundcloud_client_id;this.url=args.url;this.index=args.index;this.stream=undefined;this._trackToStream(this.url)}Stream_Soundcloud.prototype._trackToStream=function(url){var self=this;var params={onfinish:function(){self.flux._eventManager({msg:"Song Ended",index:self.indexX})}};SC.get("http://api.soundcloud.com/resolve",{url:url},function(track){if(track.errors===undefined&&track.kind==="track"){SC.stream("/tracks/"+track.id,params,function(sound){self.stream=sound;self.state="loaded";self.flux._eventManager({msg:"Loaded",index:self.index})})}else{self.state="error";console.log("Wrong Soundcloud link")}})};Stream_Soundcloud.prototype.stop=function(){this.stream.stop();this.stream.setPosition(0)};Stream_Soundcloud.prototype.togglePlay=function(){this.stream.togglePause()};Stream_Soundcloud.prototype.setVolume=function(volume){if(volume>=0&&volume<=100)this.stream.setVolume(volume);else console.log("Error: volume [0;100] you gave "+volume)};Stream_Soundcloud.prototype.setPosition=function(time){this.stream.setPosition(time*1e3)};